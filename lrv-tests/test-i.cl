
(load "../lrvasm-korr/packages.lisp")
(load "../lrvasm-korr/env-lrv.cl")
(load "../lrvasm-korr/fmt-lrv.cl")
(load "../lrvasm-korr/kone-lrv.cl")

(load "../lrvasm-korr/test-rvasm.cl")

(load "~/.eclrc")
(load "./I-lrv.cl")

(defpackage "TEST-I-32"
  (:documentation "Test functions for the risc-v 32 bit base instructions")
  (:use :cl :rvasm :i-32-rv :test-rvasm)
  )

(in-package :test-i-32)

(combine-results

(do-vait-test i.or ;; test case for test
   ((x0  x0  x0    #b00000000000000000110000000010011) ;; should fail
    (x31 x0  x0    #b00000000000000000110111110010011) ;; should fail
    (x0  x31 x0    #b00000000000011111110000000110011)
    (x31 x31 x0    #b00000000000011111110111110110011)
    (x0  x0  x31   #b00000001111100000110000000110011)
    (x31 x0  x31   #b00000001111100000110111110110011)
    (x0  x31 x31   #b00000001111111111110000000110011)
    (x31 x31 x31   #b00000001111111111110111110110011)
     )
  )

(do-vait-test   I.LUI
  ((x0  0           #b00000000000000000000000000110111)
   (x31 0           #b00000000000000000000111110110111)
   (x0  #x1000      #b00000000000000000001000000110111)
   (x0  #x7ffff000  #b01111111111111111111000000110111)
   (x0  #x-1000     #b11111111111111111111000000110111)
   (x0  #x-80000000 #b10000000000000000000000000110111)))


(do-vait-test   I.AUIPC
   ((x0  0           #b00000000000000000000000000010111)
    (x31 0           #b00000000000000000000111110010111)
    (x0  #x1000      #b00000000000000000001000000010111)
    (x0  #x7ffff000  #b01111111111111111111000000010111)
    (x0  #x-1000     #b11111111111111111111000000010111)
    (x0  #x-80000000 #b10000000000000000000000000010111)))


(do-vait-test   I.JAL
   ((x0  0         #b00000000000000000000000001101111)
    (x31 0         #b00000000000000000000111111101111)
    (x0  2         #b00000000001000000000000001101111)
    (x0  2046      #b01111111111000000000000001101111)
    (x0  2048      #b00000000000100000000000001101111)
    (x0  #x0ff000  #b00000000000011111111000001101111)
    (x0  #x0ffffe  #b01111111111111111111000001101111)
    (x0  -2        #b11111111111111111111000001101111)
    (x0  #x-1000   #b10000000000011111111000001101111)
    (x0  #x-ff800  #b10000000000100000000000001101111)
    (x0  #x-ff802  #b11111111111000000000000001101111)
    (x0  #x-100000 #b10000000000000000000000001101111)))


(do-vait-test   I.JALR
   ((x0  x0  0       #b00000000000000000000000001100111)
    (x31 x0  0       #b00000000000000000000111111100111)
    (x0  x31 0       #b00000000000011111000000001100111)
    (x31 x31 0       #b00000000000011111000111111100111)
    (x0  x0  1       #b00000000000100000000000001100111)
    (x0  x0  #x7ff   #b01111111111100000000000001100111)
    (x0  x0  -1      #b11111111111100000000000001100111)
    (x0  x0  #x-800  #b10000000000000000000000001100111)))


(do-vait-test   I.BEQ
   ((x0  x0  0       #b00000000000000000000000001100011)
    (x31 x0  0       #b00000000000011111000000001100011)
    (x0  x31 0       #b00000001111100000000000001100011)
    (x31 x31 0       #b00000001111111111000000001100011)
    (x0  x0  2       #b00000000000000000000000101100011)
    (x0  x0  #xffe   #b01111110000000000000111111100011)
    (x0  x0  -2      #b11111110000000000000111111100011)
    (x0  x0  #x-1000 #b10000000000000000000000001100011)))


(do-vait-test   I.BNE
   ((x0  x0  0       #b00000000000000000001000001100011)
    (x31 x0  0       #b00000000000011111001000001100011)
    (x0  x31 0       #b00000001111100000001000001100011)
    (x31 x31 0       #b00000001111111111001000001100011)
    (x0  x0  2       #b00000000000000000001000101100011)
    (x0  x0  #xffe   #b01111110000000000001111111100011)
    (x0  x0  -2      #b11111110000000000001111111100011)
    (x0  x0  #x-1000 #b10000000000000000001000001100011)))


(do-vait-test   I.BLT
   ((x0  x0  0       #b00000000000000000100000001100011)
    (x31 x0  0       #b00000000000011111100000001100011)
    (x0  x31 0       #b00000001111100000100000001100011)
    (x31 x31 0       #b00000001111111111100000001100011)
    (x0  x0  2       #b00000000000000000100000101100011)
    (x0  x0  #xffe   #b01111110000000000100111111100011)
    (x0  x0  -2      #b11111110000000000100111111100011)
    (x0  x0  #x-1000 #b10000000000000000100000001100011)))


(do-vait-test   I.BGE
   ((x0  x0  0       #b00000000000000000101000001100011)
    (x31 x0  0       #b00000000000011111101000001100011)
    (x0  x31 0       #b00000001111100000101000001100011)
    (x31 x31 0       #b00000001111111111101000001100011)
    (x0  x0  2       #b00000000000000000101000101100011)
    (x0  x0  #xffe   #b01111110000000000101111111100011)
    (x0  x0  -2      #b11111110000000000101111111100011)
    (x0  x0  #x-1000 #b10000000000000000101000001100011)))


(do-vait-test   I.BLTU
   ((x0  x0  0       #b00000000000000000110000001100011)
    (x31 x0  0       #b00000000000011111110000001100011)
    (x0  x31 0       #b00000001111100000110000001100011)
    (x31 x31 0       #b00000001111111111110000001100011)
    (x0  x0  2       #b00000000000000000110000101100011)
    (x0  x0  #xffe   #b01111110000000000110111111100011)
    (x0  x0  -2      #b11111110000000000110111111100011)
    (x0  x0  #x-1000 #b10000000000000000110000001100011)))


(do-vait-test   I.BGEU
  ((x0  x0  0       #b00000000000000000111000001100011)
   (x31 x0  0       #b00000000000011111111000001100011)
   (x0  x31 0       #b00000001111100000111000001100011)
   (x31 x31 0       #b00000001111111111111000001100011)
   (x0  x0  2       #b00000000000000000111000101100011)
   (x0  x0  #xffe   #b01111110000000000111111111100011)
   (x0  x0  -2      #b11111110000000000111111111100011)
   (x0  x0  #x-1000 #b10000000000000000111000001100011)))


(do-vait-test   I.LB
   ((x0  x0  0       #b00000000000000000000000000000011)
    (x31 x0  0       #b00000000000000000000111110000011)
    (x0  x31 0       #b00000000000011111000000000000011)
    (x31 x31 0       #b00000000000011111000111110000011)
    (x0  x0  1       #b00000000000100000000000000000011)
    (x0  x0  #x7ff   #b01111111111100000000000000000011)
    (x0  x0  -1      #b11111111111100000000000000000011)
    (x0  x0  #x-800  #b10000000000000000000000000000011)))


(do-vait-test   I.LJ
   ((x0  x0  0       #b00000000000000000001000000000011)
    (x31 x0  0       #b00000000000000000001111110000011)
    (x0  x31 0       #b00000000000011111001000000000011)
    (x31 x31 0       #b00000000000011111001111110000011)
    (x0  x0  1       #b00000000000100000001000000000011)
    (x0  x0  #x7ff   #b01111111111100000001000000000011)
    (x0  x0  -1      #b11111111111100000001000000000011)
    (x0  x0  #x-800  #b10000000000000000001000000000011)))


(do-vait-test   I.LV
   ((x0  x0  0       #b00000000000000000010000000000011)
    (x31 x0  0       #b00000000000000000010111110000011)
    (x0  x31 0       #b00000000000011111010000000000011)
    (x31 x31 0       #b00000000000011111010111110000011)
    (x0  x0  1       #b00000000000100000010000000000011)
    (x0  x0  #x7ff   #b01111111111100000010000000000011)
    (x0  x0  -1      #b11111111111100000010000000000011)
    (x0  x0  #x-800  #b10000000000000000010000000000011)))


(do-vait-test   I.LBU
   ((x0  x0  0       #b00000000000000000100000000000011)
    (x31 x0  0       #b00000000000000000100111110000011)
    (x0  x31 0       #b00000000000011111100000000000011)
    (x31 x31 0       #b00000000000011111100111110000011)
    (x0  x0  1       #b00000000000100000100000000000011)
    (x0  x0  #x7ff   #b01111111111100000100000000000011)
    (x0  x0  -1      #b11111111111100000100000000000011)
    (x0  x0  #x-800  #b10000000000000000100000000000011)))


(do-vait-test   I.LJU
   ((x0  x0  0       #b00000000000000000101000000000011)
    (x31 x0  0       #b00000000000000000101111110000011)
    (x0  x31 0       #b00000000000011111101000000000011)
    (x31 x31 0       #b00000000000011111101111110000011)
    (x0  x0  1       #b00000000000100000101000000000011)
    (x0  x0  #x7ff   #b01111111111100000101000000000011)
    (x0  x0  -1      #b11111111111100000101000000000011)
    (x0  x0  #x-800  #b10000000000000000101000000000011)))


(do-vait-test   I.SB
   ((x0  x0  0      #b00000000000000000000000000100011)
    (x0  x31 0      #b00000000000011111000000000100011)
    (x31 x0  0      #b00000001111100000000000000100011)
    (x31 x31 0      #b00000001111111111000000000100011)
    (x0  x0  1      #b00000000000000000000000010100011)
    (x0  x0  2047   #b01111110000000000000111110100011)
    (x0  x0  -1     #b11111110000000000000111110100011)
    (x0  x0  -2048  #b10000000000000000000000000100011)))


(do-vait-test   I.SJ
   ((x0  x0  0      #b00000000000000000001000000100011)
    (x0  x31 0      #b00000000000011111001000000100011)
    (x31 x0  0      #b00000001111100000001000000100011)
    (x31 x31 0      #b00000001111111111001000000100011)
    (x0  x0  1      #b00000000000000000001000010100011)
    (x0  x0  2047   #b01111110000000000001111110100011)
    (x0  x0  -1     #b11111110000000000001111110100011)
    (x0  x0  -2048  #b10000000000000000001000000100011)))


(do-vait-test   I.SV
   ((x0  x0  0      #b00000000000000000010000000100011)
    (x0  x31 0      #b00000000000011111010000000100011)
    (x31 x0  0      #b00000001111100000010000000100011)
    (x31 x31 0      #b00000001111111111010000000100011)
    (x0  x0  1      #b00000000000000000010000010100011)
    (x0  x0  2047   #b01111110000000000010111110100011)
    (x0  x0  -1     #b11111110000000000010111110100011)
    (x0  x0  -2048  #b10000000000000000010000000100011)))


(do-vait-test   I.ADDI
   ((x0  x0  0       #b00000000000000000000000000010011)
    (x31 x0  0       #b00000000000000000000111110010011)
    (x0  x31 0       #b00000000000011111000000000010011)
    (x31 x31 0       #b00000000000011111000111110010011)
    (x0  x0  1       #b00000000000100000000000000010011)
    (x0  x0  #x7ff   #b01111111111100000000000000010011)
    (x0  x0  -1      #b11111111111100000000000000010011)
    (x0  x0  #x-800  #b10000000000000000000000000010011)))


(do-vait-test   I.SLTI
   ((x0  x0  0       #b00000000000000000010000000010011)
    (x31 x0  0       #b00000000000000000010111110010011)
    (x0  x31 0       #b00000000000011111010000000010011)
    (x31 x31 0       #b00000000000011111010111110010011)
    (x0  x0  1       #b00000000000100000010000000010011)
    (x0  x0  #x7ff   #b01111111111100000010000000010011)
    (x0  x0  -1      #b11111111111100000010000000010011)
    (x0  x0  #x-800  #b10000000000000000010000000010011)))


(do-vait-test   I.SLTIU
   ((x0  x0  0       #b00000000000000000011000000010011)
    (x31 x0  0       #b00000000000000000011111110010011)
    (x0  x31 0       #b00000000000011111011000000010011)
    (x31 x31 0       #b00000000000011111011111110010011)
    (x0  x0  1       #b00000000000100000011000000010011)
    (x0  x0  #x7ff   #b01111111111100000011000000010011)
    (x0  x0  -1      #b11111111111100000011000000010011)
    (x0  x0  #x-800  #b10000000000000000011000000010011)
    ))


(do-vait-test   I.XORI
   ((x0  x0  0       #b00000000000000000100000000010011)
    (x31 x0  0       #b00000000000000000100111110010011)
    (x0  x31 0       #b00000000000011111100000000010011)
    (x31 x31 0       #b00000000000011111100111110010011)
    (x0  x0  1       #b00000000000100000100000000010011)
    (x0  x0  #x7ff   #b01111111111100000100000000010011)
    (x0  x0  -1      #b11111111111100000100000000010011)
    (x0  x0  #x-800  #b10000000000000000100000000010011)))


(do-vait-test   I.ORI
   ((x0  x0  0       #b00000000000000000110000000010011)
    (x31 x0  0       #b00000000000000000110111110010011)
    (x0  x31 0       #b00000000000011111110000000010011)
    (x31 x31 0       #b00000000000011111110111110010011)
    (x0  x0  1       #b00000000000100000110000000010011)
    (x0  x0  #x7ff   #b01111111111100000110000000010011)
    (x0  x0  -1      #b11111111111100000110000000010011)
    (x0  x0  #x-800  #b10000000000000000110000000010011)))


(do-vait-test   I.ANDI
   ((x0  x0  0       #b00000000000000000111000000010011)
    (x31 x0  0       #b00000000000000000111111110010011)
    (x0  x31 0       #b00000000000011111111000000010011)
    (x31 x31 0       #b00000000000011111111111110010011)
    (x0  x0  1       #b00000000000100000111000000010011)
    (x0  x0  #x7ff   #b01111111111100000111000000010011)
    (x0  x0  -1      #b11111111111100000111000000010011)
    (x0  x0  #x-800  #b10000000000000000111000000010011)))


(do-vait-test   I.SLLI
   ((x0  x0  0   #b00000000000000000001000000010011)
    (x31 x0  0   #b00000000000000000001111110010011)
    (x0  x31 0   #b00000000000011111001000000010011)
    (x31 x31 0   #b00000000000011111001111110010011)
    (x0  x0  31  #b00000001111100000001000000010011)
    (x31 x0  31  #b00000001111100000001111110010011)
    (x0  x31 31  #b00000001111111111001000000010011)
    (x31 x31 31  #b00000001111111111001111110010011)))


(do-vait-test   I.SRLI
   ((x0  x0  0   #b00000000000000000101000000010011)
    (x31 x0  0   #b00000000000000000101111110010011)
    (x0  x31 0   #b00000000000011111101000000010011)
    (x31 x31 0   #b00000000000011111101111110010011)
    (x0  x0  31  #b00000001111100000101000000010011)
    (x31 x0  31  #b00000001111100000101111110010011)
    (x0  x31 31  #b00000001111111111101000000010011)
    (x31 x31 31  #b00000001111111111101111110010011)))


(do-vait-test   I.SRAI
   ((x0  x0  0   #b01000000000000000101000000010011)
    (x31 x0  0   #b01000000000000000101111110010011)
    (x0  x31 0   #b01000000000011111101000000010011)
    (x31 x31 0   #b01000000000011111101111110010011)
    (x0  x0  31  #b01000001111100000101000000010011)
    (x31 x0  31  #b01000001111100000101111110010011)
    (x0  x31 31  #b01000001111111111101000000010011)
    (x31 x31 31  #b01000001111111111101111110010011)))


(do-vait-test   I.ADD
   ((x0  x0  x0   #b00000000000000000000000000110011)
    (x31 x0  x0   #b00000000000000000000111110110011)
    (x0  x31 x0   #b00000000000011111000000000110011)
    (x31 x31 x0   #b00000000000011111000111110110011)
    (x0  x0  x31  #b00000001111100000000000000110011)
    (x31 x0  x31  #b00000001111100000000111110110011)
    (x0  x31 x31  #b00000001111111111000000000110011)
    (x31 x31 x31  #b00000001111111111000111110110011)))


(do-vait-test   I.SUB
   ((x0  x0  x0   #b01000000000000000000000000110011)
    (x31 x0  x0   #b01000000000000000000111110110011)
    (x0  x31 x0   #b01000000000011111000000000110011)
    (x31 x31 x0   #b01000000000011111000111110110011)
    (x0  x0  x31  #b01000001111100000000000000110011)
    (x31 x0  x31  #b01000001111100000000111110110011)
    (x0  x31 x31  #b01000001111111111000000000110011)
    (x31 x31 x31  #b01000001111111111000111110110011)))


(do-vait-test   I.SLL
   ((x0  x0  x0   #b00000000000000000001000000110011)
    (x31 x0  x0   #b00000000000000000001111110110011)
    (x0  x31 x0   #b00000000000011111001000000110011)
    (x31 x31 x0   #b00000000000011111001111110110011)
    (x0  x0  x31  #b00000001111100000001000000110011)
    (x31 x0  x31  #b00000001111100000001111110110011)
    (x0  x31 x31  #b00000001111111111001000000110011)
    (x31 x31 x31  #b00000001111111111001111110110011)))


(do-vait-test   I.SLT
   ((x0  x0  x0   #b00000000000000000010000000110011)
    (x31 x0  x0   #b00000000000000000010111110110011)
    (x0  x31 x0   #b00000000000011111010000000110011)
    (x31 x31 x0   #b00000000000011111010111110110011)
    (x0  x0  x31  #b00000001111100000010000000110011)
    (x31 x0  x31  #b00000001111100000010111110110011)
    (x0  x31 x31  #b00000001111111111010000000110011)
    (x31 x31 x31  #b00000001111111111010111110110011)))


(do-vait-test   I.SLTU
   ((x0  x0  x0   #b00000000000000000011000000110011)
    (x31 x0  x0   #b00000000000000000011111110110011)
    (x0  x31 x0   #b00000000000011111011000000110011)
    (x31 x31 x0   #b00000000000011111011111110110011)
    (x0  x0  x31  #b00000001111100000011000000110011)
    (x31 x0  x31  #b00000001111100000011111110110011)
    (x0  x31 x31  #b00000001111111111011000000110011)
    (x31 x31 x31  #b00000001111111111011111110110011)))


(do-vait-test   I.XOR
   ((x0  x0  x0   #b00000000000000000100000000110011)
    (x31 x0  x0   #b00000000000000000100111110110011)
    (x0  x31 x0   #b00000000000011111100000000110011)
    (x31 x31 x0   #b00000000000011111100111110110011)
    (x0  x0  x31  #b00000001111100000100000000110011)
    (x31 x0  x31  #b00000001111100000100111110110011)
    (x0  x31 x31  #b00000001111111111100000000110011)
    (x31 x31 x31  #b00000001111111111100111110110011)))


(do-vait-test   I.SRL
   ((x0  x0  x0   #b00000000000000000101000000110011)
    (x31 x0  x0   #b00000000000000000101111110110011)
    (x0  x31 x0   #b00000000000011111101000000110011)
    (x31 x31 x0   #b00000000000011111101111110110011)
    (x0  x0  x31  #b00000001111100000101000000110011)
    (x31 x0  x31  #b00000001111100000101111110110011)
    (x0  x31 x31  #b00000001111111111101000000110011)
    (x31 x31 x31  #b00000001111111111101111110110011)))


(do-vait-test   I.SRA
   ((x0  x0  x0   #b01000000000000000101000000110011)
    (x31 x0  x0   #b01000000000000000101111110110011)
    (x0  x31 x0   #b01000000000011111101000000110011)
    (x31 x31 x0   #b01000000000011111101111110110011)
    (x0  x0  x31  #b01000001111100000101000000110011)
    (x31 x0  x31  #b01000001111100000101111110110011)
    (x0  x31 x31  #b01000001111111111101000000110011)
    (x31 x31 x31  #b01000001111111111101111110110011)))


(do-vait-test   I.OR
   ((x0  x0  x0   #b00000000000000000110000000110011)
    (x31 x0  x0   #b00000000000000000110111110110011)
    (x0  x31 x0   #b00000000000011111110000000110011)
    (x31 x31 x0   #b00000000000011111110111110110011)
    (x0  x0  x31  #b00000001111100000110000000110011)
    (x31 x0  x31  #b00000001111100000110111110110011)
    (x0  x31 x31  #b00000001111111111110000000110011)
    (x31 x31 x31  #b00000001111111111110111110110011)))


(do-vait-test   I.AND
   ((x0  x0  x0   #b00000000000000000111000000110011)
    (x31 x0  x0   #b00000000000000000111111110110011)
    (x0  x31 x0   #b00000000000011111111000000110011)
    (x31 x31 x0   #b00000000000011111111111110110011)
    (x0  x0  x31  #b00000001111100000111000000110011)
    (x31 x0  x31  #b00000001111100000111111110110011)
    (x0  x31 x31  #b00000001111111111111000000110011)
    (x31 x31 x31  #b00000001111111111111111110110011)))

  )

;; (do-vait-test   I.FENCE
;;    ((x0 x0 x0   #b00000000000000000000000000001111)
;;     (x31 x0 x0   #b00000000000000000000111110001111)
;;     (x0 x31 x0   #b00000000000011111000000000001111)
;;     (x31 x31 x0   #b00000000000011111000111110001111)))


(do-vait-test   I.ECALL
;;    ;; ((x0 x0 #b000000000000   #b00000000000000000000000001110011)))
   ((#b00000000000000000000000001110011)))


(do-vait-test   I.EBREAK
;;    ((x0 x0 #b000000000001   #b00000000000100000000000001110011)))
   ((#b00000000000100000000000001110011)))


;; (defun test-addi ()
;;    (progn (set-env)
;;           (i.addi x0 x0 0)
;;           (report-result (check-vait #b00000000000000000000000000010011 )
;;                          '(x0 x0 0 )
;;                           #b00000000000000000000000000010011 ))
;;    (progn (set-env)
;;           (i.addi x31 x0 0)
;;           (check-vait #b00000000000000000000111110010011)))

;; (test-addi)
;; (defvar h '((x0 x0 x0   #b00000000000000000101000000110011)
;;             (x31 x0 x0   #b00000000000000000101111110110011)
;;             ) )

;; (defun test-xor ()
;;   (loop for f in h do (progn (set-env)
;;                              (apply #'i.xor (butlast f 1))
;;                              (report-result (apply #'check-vait (last f))
;;                                             (butlast f 1) (last f))
                             ;; )))

     ;; (loop for l test-list do
     ;;    (progn (set-env)
     ;;       (apply ,@fun-list (butlast l 1))
     ;;       (report-result (apply check-vait (last l)
     ;;                      (butlast l 1)
     ;;                      (last l)))
